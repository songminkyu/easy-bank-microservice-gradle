// Project Information
description = 'message'
version = '0.0.1-SNAPSHOT'

ext {
    projectUrl = 'https://github.com/songminkyu/easy-bank-msa-gradle/'
    developerName = 'songminkyu'
    developerEmail = 'song600min@gmail.com'
    scmUrl = 'https://github.com/songminkyu/easy-bank-msa-gradle.git'
    scmConnection = 'scm:git:https://github.com/songminkyu/easy-bank-msa-gradle.git'
}

dependencies {
    // Spring Boot Web Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Spring Cloud Stream & Kafka
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    
    // Spring Boot Actuator for monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Micrometer Prometheus for metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.springCloudVersion}"
    }
}

// Spring Boot Plugin Configuration
springBoot {
    buildInfo()
}

// JAR Configuration
jar {
    enabled = false
    archiveBaseName = 'message'
    archiveVersion = '0.0.1-SNAPSHOT'
}

bootJar {
    enabled = true
    archiveBaseName = 'message'
    archiveVersion = '0.0.1-SNAPSHOT'
    
    // Exclude lombok from the fat jar (equivalent to Maven exclusion)
    exclude('**/lombok/**')
}

// Apply plugins for additional Maven plugin functionality
plugins.withId('com.google.cloud.tools.jib') {
    jib {
        from {
            image = "eclipse-temurin:21-jre"
        }
        to {
            image = "songminkyu/message:${rootProject.ext.imageTag}"
        }
        container {
            jvmFlags = ['-Xmx512m']
            ports = ['8080']
            environment = [
                'SPRING_PROFILES_ACTIVE': 'prod'
            ]
        }
    }
}

// Test configuration
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
